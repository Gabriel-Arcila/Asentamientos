@inject IRangoData RangoData
@inject IMaestra MaestaData
@inject NavigationManager NavigationManager
@page "/Insercion"

<PageTitle>Insercion de Asentamientos</PageTitle>

<h1>Asentamientos</h1>

<FiltroMaestras OnChangeempresa="((int e) => this.idEmpresa = e)" OnChangelineas="((int l) => this.idLinea = l)" />


@if(idLinea != 0){
    <FiltrosAsentamientos idLinea="@idLinea" OnChangeClasificacion="((int idClasiVar) => this.idClasiVar = idClasiVar)" OnChangeProducto="((int idProducto) => this.idProducto = idProducto)" OnChangeSeccion="((int idSeccion) => this.idSeccion = idSeccion)"/>
    
    <FiltroGrupoTurno idEmpresa="@idEmpresa"  OnChangeGrupo="((string g) => this.grupo = g)" OnChangeTurno="((string t) => this.turno = t)"/>
}


@if(idClasiVar != 0 && idSeccion != 0 && idProducto != 0 && grupo != "" && turno != ""){
    <RadzenButton class="mt-4" ButtonType="ButtonType.Button" Variant="Variant.Outlined" Disabled="false" Text="Consultar" ButtonStyle="ButtonStyle.Success" Click=Consultar />
    <br>
    <br>
}


@if(band){
    <RadzenDataGrid class="table" Data="@listaRango" TItem="Rango" AllowVirtualization="true" Style="height:400px"
                AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LogicalFilterOperator="LogicalFilterOperator.Or"
                AllowSorting="true">

                <Columns>
                    <RadzenDataGridColumn Width="3%" TItem="Rango" Title="#" Filterable="false" Sortable="false" TextAlign="TextAlign.Center">
                        <Template Context="data">
                            <RadzenText class="mb-0 tipografia">@(listaRango.IndexOf(data) + 1)</RadzenText>
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Rango" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Property="IdVariableNavigation.IdSeccionNavigation.Snombre" Title="SecciÃ³n" />
                    <RadzenDataGridColumn TItem="Rango" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Property="IdVariableNavigation.Vnombre" Title="Variable" />
                    <RadzenDataGridColumn TItem="Rango" Title="Valor" Filterable="false" Sortable="false" TextAlign="TextAlign.Center">
                        <Template Context="data">
                            <RadzenNumeric Step="0.5" @bind-Value="@intValue" Min="@min" Max="@max" style="width: 25%;"/>
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Rango" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Property="IdVariableNavigation.IdUnidadNavigation.Unombre" Title="Unidad" />
                </Columns>
    </RadzenDataGrid>
}



@code {
    public int idLinea {get; set;} = 0;
    public int idEmpresa {get; set;} = 0;
    public int idClasiVar {get; set;} = 0;
    public int idSeccion {get; set;} = 0;
    public int idProducto {get; set;} = 0;
    public int min {get; set;} = 0;
    public int max {get; set;} = 1000;
    public double intValue {get; set;} = 0;
    public bool band  {get; set;} =  false;
    public string grupo {get; set;} = "";
    public string turno {get; set;} = "";
    public List<Rango> listaRango {get; set;} = new List<Rango>();
    public FiltrosRangoControlDTO  filtros = new FiltrosRangoControlDTO();

    private async Task Consultar()
    {
        band = false;
        filtros = new FiltrosRangoControlDTO();
        filtros.master = await MaestaData.GetMaestraPorLinea(idLinea);
        filtros.producto = idProducto;
        filtros.seccion = idSeccion;
        filtros.tipo = idClasiVar;
        listaRango = await RangoData.GetRangoDeControl(filtros);
        band = true;
    }
}