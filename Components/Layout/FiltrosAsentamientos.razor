@inject IProductosVData ProductosVData
@inject ISeccionesVData SeccionesVData
@inject IVaribleData VariableData


<RadzenRow class="rz-text-align-Left">
    <RadzenColumn Size="3">
        @if(productos is not null){
            <div class="rz-p-sm-2 rz-text-align-left">
                <RadzenLabel Text="Productos" />
                <RadzenDropDown FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterOperator="StringFilterOperator.StartsWith" AllowFiltering="true"
                    TValue="int" Data=productos TextProperty="Producto" ValueProperty="IdProducto" AllowClear="true" @bind-Value=idProducto Style="width: 100%; max-width: 350px;min-width: 90px;" Change="@(arg => Set())">
                </RadzenDropDown>
            </div>
        }else{
            <CargandoSelect />
        }
    </RadzenColumn>
    <RadzenColumn Size="3">
        @if(secciones is not null){
            <div class="rz-p-sm-2 rz-text-align-left">
                <RadzenLabel Text="Secciones" />
                <RadzenDropDown FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterOperator="StringFilterOperator.StartsWith" AllowFiltering="true"
                    TValue="int" Data=secciones TextProperty="Seccion" ValueProperty="IdSeccion" AllowClear="true" @bind-Value=idSeccion Style="width: 100%; max-width: 350px;min-width: 90px;" Change="@(arg => Set())">
                </RadzenDropDown>
            </div>
        }else{
            <CargandoSelect />
        }
    </RadzenColumn>

    <RadzenColumn Size="3">
        @if(clasificacion is not null){
            <div class="rz-p-sm-2 rz-text-align-left">
                <RadzenLabel Text="Clasificacion" />
                <RadzenDropDown FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterOperator="StringFilterOperator.StartsWith" AllowFiltering="true"
                    TValue="int" Data=clasificacion TextProperty="Clasificacion" ValueProperty="IdClasiVar" AllowClear="true" @bind-Value=idClasiVar Style="width: 100%; max-width: 350px;min-width: 90px;" Change="@(arg => Set())">
                </RadzenDropDown>
            </div>
        }else{
            <CargandoSelect />
        }
    </RadzenColumn>
    
</RadzenRow>

@code {
    [Parameter]
    public int idLinea { get; set; } = 0;

    [Parameter]
    public EventCallback<int> OnChangeProducto { get; set; }
    [Parameter]
    public EventCallback<int> OnChangeSeccion { get; set; }
    [Parameter]
    public EventCallback<int> OnChangeClasificacion { get; set; }
    public int idProducto {get; set;} = 0;
    public int idSeccion {get; set;} = 0;
    public int idClasiVar {get; set;} = 0;
    public int valueLinea { get; set; } = 0;
    List<ProductosV>? productos = null;
    List<SeccionesV>? secciones = null;
    List<VarClasificacionV>? clasificacion = null;
    protected override async Task OnParametersSetAsync()
    {
        if(idLinea != 0 && idLinea != valueLinea){
            valueLinea = idLinea;
            productos = null;
            secciones = null;
            clasificacion = null;
            productos = await ProductosVData.GetProductosPorLinea(idLinea);
            secciones = await SeccionesVData.GetSeccionesPorLinea(idLinea);
            clasificacion = await VariableData.GetClasificacionVarPorLinea(idLinea);
        }
        valueLinea = idLinea;
    }
    public void searchTextChanged(string text)
    {
        StateHasChanged();
    }

    private async Task Set()
    {
        await OnChangeProducto.InvokeAsync(idProducto);
        await OnChangeSeccion.InvokeAsync(idSeccion);
        await OnChangeClasificacion.InvokeAsync(idClasiVar);
    }

}